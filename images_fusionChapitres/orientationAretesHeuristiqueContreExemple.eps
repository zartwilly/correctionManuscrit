%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 615 490
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, June 29, 2018 8:48:16 PM CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
615 490 setpagesize
0 0 0 0 setmargins
0 0 setorigin
615 490 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
615.000 0.00000 l
615.000 490.000 l
0.00000 490.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
615.000 0.00000 l
615.000 490.000 l
0.00000 490.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 615 490 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -206.000 -22.0000 ] concat
1.00000 1.00000 1.00000 RG
newpath
206.000 22.0000 m
821.000 22.0000 l
821.000 512.000 l
206.000 512.000 l
206.000 22.0000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -206.000 -22.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -206.000 -22.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -206.000 -22.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .800000 0.00000 RG
newpath
239.000 381.000 m
239.000 385.971 234.971 390.000 230.000 390.000  c
225.029 390.000 221.000 385.971 221.000 381.000  c
221.000 376.029 225.029 372.000 230.000 372.000  c
234.971 372.000 239.000 376.029 239.000 381.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
230.433 381.857 m
229.568 381.857 228.966 381.956 228.628 382.154  c
228.289 382.352 228.120 382.691 228.120 383.170  c
228.120 383.555 228.248 383.860 228.503 384.084  c
228.758 384.308 229.099 384.420 229.526 384.420  c
230.131 384.420 230.612 384.209 230.972 383.787  c
231.331 383.365 231.511 382.800 231.511 382.092  c
231.511 381.857 l
230.433 381.857 l
h
232.589 381.404 m
232.589 385.154 l
231.511 385.154 l
231.511 384.154 l
231.261 384.550 230.953 384.844 230.589 385.037  c
230.224 385.230 229.776 385.326 229.245 385.326  c
228.568 385.326 228.032 385.136 227.636 384.756  c
227.240 384.376 227.042 383.873 227.042 383.248  c
227.042 382.508 227.289 381.951 227.784 381.576  c
228.279 381.201 229.016 381.014 229.995 381.014  c
231.511 381.014 l
231.511 380.904 l
231.511 380.404 231.347 380.019 231.019 379.748  c
230.690 379.477 230.235 379.342 229.651 379.342  c
229.276 379.342 228.909 379.389 228.550 379.482  c
228.190 379.576 227.849 379.712 227.526 379.889  c
227.526 378.889 l
227.922 378.732 228.305 378.618 228.675 378.545  c
229.045 378.472 229.407 378.436 229.761 378.436  c
230.709 378.436 231.417 378.680 231.886 379.170  c
232.354 379.660 232.589 380.404 232.589 381.404  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
239.000 381.000 m
239.000 385.971 234.971 390.000 230.000 390.000  c
225.029 390.000 221.000 385.971 221.000 381.000  c
221.000 376.029 225.029 372.000 230.000 372.000  c
234.971 372.000 239.000 376.029 239.000 381.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
337.000 330.000 m
337.000 334.971 332.971 339.000 328.000 339.000  c
323.029 339.000 319.000 334.971 319.000 330.000  c
319.000 325.029 323.029 321.000 328.000 321.000  c
332.971 321.000 337.000 325.029 337.000 330.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
330.035 330.873 m
330.035 330.081 329.871 329.462 329.543 329.014  c
329.215 328.566 328.770 328.342 328.207 328.342  c
327.634 328.342 327.184 328.566 326.855 329.014  c
326.527 329.462 326.363 330.081 326.363 330.873  c
326.363 331.665 326.527 332.287 326.855 332.740  c
327.184 333.193 327.634 333.420 328.207 333.420  c
328.770 333.420 329.215 333.193 329.543 332.740  c
329.871 332.287 330.035 331.665 330.035 330.873  c
h
326.363 328.592 m
326.592 328.196 326.879 327.904 327.223 327.717  c
327.566 327.529 327.978 327.436 328.457 327.436  c
329.259 327.436 329.910 327.751 330.410 328.381  c
330.910 329.011 331.160 329.842 331.160 330.873  c
331.160 331.904 330.910 332.738 330.410 333.373  c
329.910 334.008 329.259 334.326 328.457 334.326  c
327.978 334.326 327.566 334.230 327.223 334.037  c
326.879 333.844 326.592 333.555 326.363 333.170  c
326.363 334.154 l
325.285 334.154 l
325.285 325.029 l
326.363 325.029 l
326.363 328.592 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
337.000 330.000 m
337.000 334.971 332.971 339.000 328.000 339.000  c
323.029 339.000 319.000 334.971 319.000 330.000  c
319.000 325.029 323.029 321.000 328.000 321.000  c
332.971 321.000 337.000 325.029 337.000 330.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
291.000 488.000 m
291.000 492.971 286.971 497.000 282.000 497.000  c
277.029 497.000 273.000 492.971 273.000 488.000  c
273.000 483.029 277.029 479.000 282.000 479.000  c
286.971 479.000 291.000 483.029 291.000 488.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
284.561 485.842 m
284.561 486.857 l
284.248 486.680 283.941 486.550 283.639 486.467  c
283.337 486.383 283.029 486.342 282.717 486.342  c
282.008 486.342 281.462 486.563 281.076 487.006  c
280.691 487.449 280.498 488.071 280.498 488.873  c
280.498 489.675 280.691 490.298 281.076 490.740  c
281.462 491.183 282.008 491.404 282.717 491.404  c
283.029 491.404 283.337 491.363 283.639 491.279  c
283.941 491.196 284.248 491.071 284.561 490.904  c
284.561 491.904 l
284.258 492.040 283.946 492.144 283.623 492.217  c
283.300 492.290 282.956 492.326 282.592 492.326  c
281.602 492.326 280.816 492.016 280.232 491.396  c
279.649 490.777 279.357 489.936 279.357 488.873  c
279.357 487.811 279.652 486.972 280.240 486.357  c
280.829 485.743 281.639 485.436 282.670 485.436  c
282.993 485.436 283.313 485.469 283.631 485.537  c
283.949 485.605 284.258 485.706 284.561 485.842  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
291.000 488.000 m
291.000 492.971 286.971 497.000 282.000 497.000  c
277.029 497.000 273.000 492.971 273.000 488.000  c
273.000 483.029 277.029 479.000 282.000 479.000  c
286.971 479.000 291.000 483.029 291.000 488.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
401.000 488.000 m
401.000 492.971 396.971 497.000 392.000 497.000  c
387.029 497.000 383.000 492.971 383.000 488.000  c
383.000 483.029 387.029 479.000 392.000 479.000  c
396.971 479.000 401.000 483.029 401.000 488.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
393.645 486.592 m
393.645 483.029 l
394.723 483.029 l
394.723 492.154 l
393.645 492.154 l
393.645 491.170 l
393.415 491.555 393.129 491.844 392.785 492.037  c
392.441 492.230 392.025 492.326 391.535 492.326  c
390.743 492.326 390.098 492.008 389.598 491.373  c
389.098 490.738 388.848 489.904 388.848 488.873  c
388.848 487.842 389.098 487.011 389.598 486.381  c
390.098 485.751 390.743 485.436 391.535 485.436  c
392.025 485.436 392.441 485.529 392.785 485.717  c
393.129 485.904 393.415 486.196 393.645 486.592  c
h
389.973 488.873 m
389.973 489.665 390.134 490.287 390.457 490.740  c
390.780 491.193 391.228 491.420 391.801 491.420  c
392.374 491.420 392.824 491.193 393.152 490.740  c
393.480 490.287 393.645 489.665 393.645 488.873  c
393.645 488.081 393.480 487.462 393.152 487.014  c
392.824 486.566 392.374 486.342 391.801 486.342  c
391.228 486.342 390.780 486.566 390.457 487.014  c
390.134 487.462 389.973 488.081 389.973 488.873  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
401.000 488.000 m
401.000 492.971 396.971 497.000 392.000 497.000  c
387.029 497.000 383.000 492.971 383.000 488.000  c
383.000 483.029 387.029 479.000 392.000 479.000  c
396.971 479.000 401.000 483.029 401.000 488.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
437.000 381.000 m
437.000 385.971 432.971 390.000 428.000 390.000  c
423.029 390.000 419.000 385.971 419.000 381.000  c
419.000 376.029 423.029 372.000 428.000 372.000  c
432.971 372.000 437.000 376.029 437.000 381.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
431.059 381.607 m
431.059 382.123 l
426.090 382.123 l
426.142 382.873 426.368 383.441 426.770 383.826  c
427.171 384.212 427.725 384.404 428.434 384.404  c
428.850 384.404 429.254 384.355 429.645 384.256  c
430.035 384.157 430.423 384.003 430.809 383.795  c
430.809 384.826 l
430.413 384.982 430.012 385.105 429.605 385.193  c
429.199 385.282 428.788 385.326 428.371 385.326  c
427.329 385.326 426.501 385.021 425.887 384.412  c
425.272 383.803 424.965 382.977 424.965 381.936  c
424.965 380.863 425.257 380.011 425.840 379.381  c
426.423 378.751 427.204 378.436 428.184 378.436  c
429.069 378.436 429.770 378.719 430.285 379.287  c
430.801 379.855 431.059 380.628 431.059 381.607  c
h
429.980 381.279 m
429.970 380.696 429.803 380.227 429.480 379.873  c
429.158 379.519 428.730 379.342 428.199 379.342  c
427.595 379.342 427.113 379.514 426.754 379.857  c
426.395 380.201 426.189 380.680 426.137 381.295  c
429.980 381.279 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
437.000 381.000 m
437.000 385.971 432.971 390.000 428.000 390.000  c
423.029 390.000 419.000 385.971 419.000 381.000  c
419.000 376.029 423.029 372.000 428.000 372.000  c
432.971 372.000 437.000 376.029 437.000 381.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
532.000 304.000 m
532.000 308.971 527.971 313.000 523.000 313.000  c
518.029 313.000 514.000 308.971 514.000 304.000  c
514.000 299.029 518.029 295.000 523.000 295.000  c
527.971 295.000 532.000 299.029 532.000 304.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
519.809 301.592 m
520.949 301.592 l
522.996 307.092 l
525.059 301.592 l
526.199 301.592 l
523.730 308.154 l
522.262 308.154 l
519.809 301.592 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
532.000 304.000 m
532.000 308.971 527.971 313.000 523.000 313.000  c
518.029 313.000 514.000 308.971 514.000 304.000  c
514.000 299.029 518.029 295.000 523.000 295.000  c
527.971 295.000 532.000 299.029 532.000 304.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
480.000 97.0000 m
480.000 101.971 475.971 106.000 471.000 106.000  c
466.029 106.000 462.000 101.971 462.000 97.0000  c
462.000 92.0294 466.029 88.0000 471.000 88.0000  c
475.971 88.0000 480.000 92.0294 480.000 97.0000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
468.619 92.0293 m
469.697 92.0293 l
469.697 97.4199 l
472.916 94.5918 l
474.291 94.5918 l
470.807 97.6543 l
474.447 101.154 l
473.041 101.154 l
469.697 97.9512 l
469.697 101.154 l
468.619 101.154 l
468.619 92.0293 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
480.000 97.0000 m
480.000 101.971 475.971 106.000 471.000 106.000  c
466.029 106.000 462.000 101.971 462.000 97.0000  c
462.000 92.0294 466.029 88.0000 471.000 88.0000  c
475.971 88.0000 480.000 92.0294 480.000 97.0000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
578.000 46.0000 m
578.000 50.9706 573.971 55.0000 569.000 55.0000  c
564.029 55.0000 560.000 50.9706 560.000 46.0000  c
560.000 41.0294 564.029 37.0000 569.000 37.0000  c
573.971 37.0000 578.000 41.0294 578.000 46.0000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
568.458 43.5918 m
569.536 43.5918 l
569.536 50.2793 l
569.536 51.1126 569.377 51.7168 569.060 52.0918  c
568.742 52.4668 568.229 52.6543 567.521 52.6543  c
567.114 52.6543 l
567.114 51.7324 l
567.411 51.7324 l
567.817 51.7324 568.093 51.6387 568.239 51.4512  c
568.385 51.2637 568.458 50.8730 568.458 50.2793  c
568.458 43.5918 l
h
568.458 41.0293 m
569.536 41.0293 l
569.536 42.4043 l
568.458 42.4043 l
568.458 41.0293 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
578.000 46.0000 m
578.000 50.9706 573.971 55.0000 569.000 55.0000  c
564.029 55.0000 560.000 50.9706 560.000 46.0000  c
560.000 41.0294 564.029 37.0000 569.000 37.0000  c
573.971 37.0000 578.000 41.0294 578.000 46.0000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
532.000 204.000 m
532.000 208.971 527.971 213.000 523.000 213.000  c
518.029 213.000 514.000 208.971 514.000 204.000  c
514.000 199.029 518.029 195.000 523.000 195.000  c
527.971 195.000 532.000 199.029 532.000 204.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
524.645 204.795 m
524.645 204.014 524.483 203.410 524.160 202.982  c
523.837 202.555 523.384 202.342 522.801 202.342  c
522.228 202.342 521.780 202.555 521.457 202.982  c
521.134 203.410 520.973 204.014 520.973 204.795  c
520.973 205.576 521.134 206.180 521.457 206.607  c
521.780 207.035 522.228 207.248 522.801 207.248  c
523.384 207.248 523.837 207.035 524.160 206.607  c
524.483 206.180 524.645 205.576 524.645 204.795  c
h
525.723 207.342 m
525.723 208.456 525.475 209.287 524.980 209.834  c
524.486 210.381 523.723 210.654 522.691 210.654  c
522.316 210.654 521.960 210.626 521.621 210.568  c
521.283 210.511 520.957 210.425 520.645 210.311  c
520.645 209.264 l
520.957 209.430 521.270 209.555 521.582 209.639  c
521.895 209.722 522.207 209.764 522.520 209.764  c
523.228 209.764 523.759 209.579 524.113 209.209  c
524.467 208.839 524.645 208.279 524.645 207.529  c
524.645 206.998 l
524.415 207.383 524.129 207.673 523.785 207.865  c
523.441 208.058 523.025 208.154 522.535 208.154  c
521.733 208.154 521.085 207.847 520.590 207.232  c
520.095 206.618 519.848 205.805 519.848 204.795  c
519.848 203.785 520.095 202.972 520.590 202.357  c
521.085 201.743 521.733 201.436 522.535 201.436  c
523.025 201.436 523.441 201.532 523.785 201.725  c
524.129 201.917 524.415 202.206 524.645 202.592  c
524.645 201.592 l
525.723 201.592 l
525.723 207.342 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
532.000 204.000 m
532.000 208.971 527.971 213.000 523.000 213.000  c
518.029 213.000 514.000 208.971 514.000 204.000  c
514.000 199.029 518.029 195.000 523.000 195.000  c
527.971 195.000 532.000 199.029 532.000 204.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
642.000 204.000 m
642.000 208.971 637.971 213.000 633.000 213.000  c
628.029 213.000 624.000 208.971 624.000 204.000  c
624.000 199.029 628.029 195.000 633.000 195.000  c
637.971 195.000 642.000 199.029 642.000 204.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
635.791 204.186 m
635.791 208.154 l
634.713 208.154 l
634.713 204.232 l
634.713 203.607 634.590 203.141 634.346 202.834  c
634.101 202.527 633.739 202.373 633.260 202.373  c
632.676 202.373 632.215 202.558 631.877 202.928  c
631.538 203.298 631.369 203.805 631.369 204.451  c
631.369 208.154 l
630.291 208.154 l
630.291 199.029 l
631.369 199.029 l
631.369 202.607 l
631.630 202.212 631.934 201.917 632.283 201.725  c
632.632 201.532 633.036 201.436 633.494 201.436  c
634.244 201.436 634.814 201.667 635.205 202.131  c
635.596 202.594 635.791 203.279 635.791 204.186  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
642.000 204.000 m
642.000 208.971 637.971 213.000 633.000 213.000  c
628.029 213.000 624.000 208.971 624.000 204.000  c
624.000 199.029 628.029 195.000 633.000 195.000  c
637.971 195.000 642.000 199.029 642.000 204.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
678.000 97.0000 m
678.000 101.971 673.971 106.000 669.000 106.000  c
664.029 106.000 660.000 101.971 660.000 97.0000  c
660.000 92.0294 664.029 88.0000 669.000 88.0000  c
673.971 88.0000 678.000 92.0294 678.000 97.0000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
668.458 94.5918 m
669.536 94.5918 l
669.536 101.154 l
668.458 101.154 l
668.458 94.5918 l
h
668.458 92.0293 m
669.536 92.0293 l
669.536 93.4043 l
668.458 93.4043 l
668.458 92.0293 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
678.000 97.0000 m
678.000 101.971 673.971 106.000 669.000 106.000  c
664.029 106.000 660.000 101.971 660.000 97.0000  c
660.000 92.0294 664.029 88.0000 669.000 88.0000  c
673.971 88.0000 678.000 92.0294 678.000 97.0000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
237.984 376.845 m
320.016 334.155 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
233.934 389.095 m
278.066 479.905 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
325.484 338.641 m
284.516 479.359 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
291.000 488.000 m
383.000 488.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
237.510 385.960 m
384.490 483.040 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
331.379 338.342 m
388.621 479.658 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
239.000 381.000 m
419.000 381.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
336.018 334.089 m
419.982 376.911 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
394.870 479.470 m
425.130 389.530 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
289.259 482.680 m
420.741 386.320 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
434.992 375.333 m
516.008 309.667 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
478.984 92.8453 m
561.016 50.1547 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
474.934 105.095 m
519.066 195.905 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
566.484 54.6412 m
525.516 195.359 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
523.000 295.000 m
523.000 213.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
532.000 204.000 m
624.000 204.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
478.510 101.960 m
625.490 199.040 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
572.379 54.3416 m
629.621 195.658 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
480.000 97.0000 m
660.000 97.0000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
577.018 50.0889 m
660.982 92.9111 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
635.870 195.470 m
666.130 105.530 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
530.259 198.680 m
661.741 102.320 l
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
608.000 381.000 m
608.000 385.971 603.971 390.000 599.000 390.000  c
594.029 390.000 590.000 385.971 590.000 381.000  c
590.000 376.029 594.029 372.000 599.000 372.000  c
603.971 372.000 608.000 376.029 608.000 381.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
598.458 376.029 m
599.536 376.029 l
599.536 385.154 l
598.458 385.154 l
598.458 376.029 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
608.000 381.000 m
608.000 385.971 603.971 390.000 599.000 390.000  c
594.029 390.000 590.000 385.971 590.000 381.000  c
590.000 376.029 594.029 372.000 599.000 372.000  c
603.971 372.000 608.000 376.029 608.000 381.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
706.000 330.000 m
706.000 334.971 701.971 339.000 697.000 339.000  c
692.029 339.000 688.000 334.971 688.000 330.000  c
688.000 325.029 692.029 321.000 697.000 321.000  c
701.971 321.000 706.000 325.029 706.000 330.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
697.390 328.857 m
697.660 328.368 697.983 328.008 698.358 327.779  c
698.733 327.550 699.176 327.436 699.687 327.436  c
700.374 327.436 700.903 327.675 701.272 328.154  c
701.642 328.633 701.827 329.311 701.827 330.186  c
701.827 334.154 l
700.749 334.154 l
700.749 330.232 l
700.749 329.597 700.637 329.128 700.413 328.826  c
700.189 328.524 699.848 328.373 699.390 328.373  c
698.827 328.373 698.384 328.558 698.062 328.928  c
697.739 329.298 697.577 329.805 697.577 330.451  c
697.577 334.154 l
696.499 334.154 l
696.499 330.232 l
696.499 329.597 696.387 329.128 696.163 328.826  c
695.939 328.524 695.593 328.373 695.124 328.373  c
694.572 328.373 694.134 328.558 693.812 328.928  c
693.489 329.298 693.327 329.805 693.327 330.451  c
693.327 334.154 l
692.249 334.154 l
692.249 327.592 l
693.327 327.592 l
693.327 328.607 l
693.577 328.212 693.874 327.917 694.218 327.725  c
694.562 327.532 694.968 327.436 695.437 327.436  c
695.916 327.436 696.322 327.555 696.655 327.795  c
696.989 328.035 697.233 328.389 697.390 328.857  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
706.000 330.000 m
706.000 334.971 701.971 339.000 697.000 339.000  c
692.029 339.000 688.000 334.971 688.000 330.000  c
688.000 325.029 692.029 321.000 697.000 321.000  c
701.971 321.000 706.000 325.029 706.000 330.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
660.000 488.000 m
660.000 492.971 655.971 497.000 651.000 497.000  c
646.029 497.000 642.000 492.971 642.000 488.000  c
642.000 483.029 646.029 479.000 651.000 479.000  c
655.971 479.000 660.000 483.029 660.000 488.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
649.363 491.170 m
649.363 494.654 l
648.285 494.654 l
648.285 485.592 l
649.363 485.592 l
649.363 486.592 l
649.592 486.196 649.879 485.904 650.223 485.717  c
650.566 485.529 650.978 485.436 651.457 485.436  c
652.259 485.436 652.910 485.751 653.410 486.381  c
653.910 487.011 654.160 487.842 654.160 488.873  c
654.160 489.904 653.910 490.738 653.410 491.373  c
652.910 492.008 652.259 492.326 651.457 492.326  c
650.978 492.326 650.566 492.230 650.223 492.037  c
649.879 491.844 649.592 491.555 649.363 491.170  c
h
653.035 488.873 m
653.035 488.081 652.871 487.462 652.543 487.014  c
652.215 486.566 651.770 486.342 651.207 486.342  c
650.634 486.342 650.184 486.566 649.855 487.014  c
649.527 487.462 649.363 488.081 649.363 488.873  c
649.363 489.665 649.527 490.287 649.855 490.740  c
650.184 491.193 650.634 491.420 651.207 491.420  c
651.770 491.420 652.215 491.193 652.543 490.740  c
652.871 490.287 653.035 489.665 653.035 488.873  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
660.000 488.000 m
660.000 492.971 655.971 497.000 651.000 497.000  c
646.029 497.000 642.000 492.971 642.000 488.000  c
642.000 483.029 646.029 479.000 651.000 479.000  c
655.971 479.000 660.000 483.029 660.000 488.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
770.000 488.000 m
770.000 492.971 765.971 497.000 761.000 497.000  c
756.029 497.000 752.000 492.971 752.000 488.000  c
752.000 483.029 756.029 479.000 761.000 479.000  c
765.971 479.000 770.000 483.029 770.000 488.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
761.001 486.342 m
760.428 486.342 759.972 486.568 759.634 487.021  c
759.295 487.475 759.126 488.092 759.126 488.873  c
759.126 489.665 759.293 490.285 759.626 490.732  c
759.959 491.180 760.418 491.404 761.001 491.404  c
761.574 491.404 762.030 491.178 762.368 490.725  c
762.707 490.271 762.876 489.654 762.876 488.873  c
762.876 488.102 762.707 487.488 762.368 487.029  c
762.030 486.571 761.574 486.342 761.001 486.342  c
h
761.001 485.436 m
761.938 485.436 762.675 485.740 763.212 486.350  c
763.748 486.959 764.017 487.800 764.017 488.873  c
764.017 489.946 763.748 490.790 763.212 491.404  c
762.675 492.019 761.938 492.326 761.001 492.326  c
760.063 492.326 759.326 492.019 758.790 491.404  c
758.254 490.790 757.985 489.946 757.985 488.873  c
757.985 487.800 758.254 486.959 758.790 486.350  c
759.326 485.740 760.063 485.436 761.001 485.436  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
770.000 488.000 m
770.000 492.971 765.971 497.000 761.000 497.000  c
756.029 497.000 752.000 492.971 752.000 488.000  c
752.000 483.029 756.029 479.000 761.000 479.000  c
765.971 479.000 770.000 483.029 770.000 488.000  c
h
S
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
806.000 381.000 m
806.000 385.971 801.971 390.000 797.000 390.000  c
792.029 390.000 788.000 385.971 788.000 381.000  c
788.000 376.029 792.029 372.000 797.000 372.000  c
801.971 372.000 806.000 376.029 806.000 381.000  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
799.791 381.186 m
799.791 385.154 l
798.713 385.154 l
798.713 381.232 l
798.713 380.607 798.590 380.141 798.346 379.834  c
798.101 379.527 797.739 379.373 797.260 379.373  c
796.676 379.373 796.215 379.558 795.877 379.928  c
795.538 380.298 795.369 380.805 795.369 381.451  c
795.369 385.154 l
794.291 385.154 l
794.291 378.592 l
795.369 378.592 l
795.369 379.607 l
795.630 379.212 795.934 378.917 796.283 378.725  c
796.632 378.532 797.036 378.436 797.494 378.436  c
798.244 378.436 798.814 378.667 799.205 379.131  c
799.596 379.594 799.791 380.279 799.791 381.186  c
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
806.000 381.000 m
806.000 385.971 801.971 390.000 797.000 390.000  c
792.029 390.000 788.000 385.971 788.000 381.000  c
788.000 376.029 792.029 372.000 797.000 372.000  c
801.971 372.000 806.000 376.029 806.000 381.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
529.322 310.405 m
592.678 374.595 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
606.984 376.845 m
689.016 334.155 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
602.934 389.095 m
647.066 479.905 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
694.484 338.641 m
653.516 479.359 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
660.000 488.000 m
752.000 488.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
606.510 385.960 m
753.490 483.040 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
700.379 338.342 m
757.621 479.658 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
608.000 381.000 m
788.000 381.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
705.018 334.089 m
788.982 376.911 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
763.870 479.470 m
794.130 389.530 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
658.259 482.680 m
789.741 386.320 l
S
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
